"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[37],{61037:function(r,t,n){n.r(t),n.d(t,{default:function(){return f}});var e=n(67294),o=n(30837),a=n(14636);function i(r,t){var n="undefined"!==typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(!n){if(Array.isArray(r)||(n=function(r,t){if(!r)return;if("string"===typeof r)return u(r,t);var n=Object.prototype.toString.call(r).slice(8,-1);"Object"===n&&r.constructor&&(n=r.constructor.name);if("Map"===n||"Set"===n)return Array.from(r);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return u(r,t)}(r))||t&&r&&"number"===typeof r.length){n&&(r=n);var e=0,o=function(){};return{s:o,n:function(){return e>=r.length?{done:!0}:{done:!1,value:r[e++]}},e:function(r){throw r},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,i=!0,l=!1;return{s:function(){n=n.call(r)},n:function(){var r=n.next();return i=r.done,r},e:function(r){l=!0,a=r},f:function(){try{i||null==n.return||n.return()}finally{if(l)throw a}}}}function u(r,t){(null==t||t>r.length)&&(t=r.length);for(var n=0,e=new Array(t);n<t;n++)e[n]=r[n];return e}o.Z.registerLanguage("json",a.Z);var l=["json"];function f(){return(0,e.useEffect)((function(){if(window.IntersectionObserver)for(var r=new IntersectionObserver((function(r){var t,n=i(r);try{for(n.s();!(t=n.n()).done;){var e=t.value;if(e.isIntersecting){var a=e.target;a.classList.contains("hljs")||o.Z.highlightElement(a)}}}catch(u){n.e(u)}finally{n.f()}})),t=0,n=Array.from(document.querySelectorAll("[data-highlight]"));t<n.length;t++){var e=n[t],a=e.dataset.highlight||"json";if(l.includes(a))for(var u=0,f=Array.from(e.querySelectorAll("pre code"));u<f.length;u++){var c=f[u];c.classList.add("language-".concat(a)),r.observe(c)}}}),[]),null}}}]);